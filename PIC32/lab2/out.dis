
out.elf:     file format elf32-tradlittlemips


Disassembly of section .config_BFC02FF0:

bfc02ff0 <__config_BFC02FF0>:
bfc02ff0:	ff ff fe fa                                         ....

Disassembly of section .config_BFC02FF4:

bfc02ff4 <__config_BFC02FF4>:
bfc02ff4:	d9 79 f8 ff                                         .y..

Disassembly of section .config_BFC02FF8:

bfc02ff8 <__config_BFC02FF8>:
bfc02ff8:	db ce 6c ff                                         ..l.

Disassembly of section .config_BFC02FFC:

bfc02ffc <__config_BFC02FFC>:
bfc02ffc:	ff ff ff 7e                                         ...~

Disassembly of section .reset:

bd001970 <_reset>:
bd001970:	0f40065e 	jal	bd001978 <_startup>
bd001974:	00000000 	nop

bd001978 <_startup>:
bd001978:	401a6000 	mfc0	k0,c0_status
bd00197c:	7f5a04c0 	ext	k0,k0,0x13,0x1
bd001980:	13400005 	beqz	k0,bd001998 <_no_nmi>
bd001984:	00000000 	nop
bd001988:	3c1a9d00 	lui	k0,0x9d00
bd00198c:	275a2818 	addiu	k0,k0,10264
bd001990:	03400008 	jr	k0
bd001994:	00000000 	nop

bd001998 <_no_nmi>:
bd001998:	3c1da002 	lui	sp,0xa002
bd00199c:	27bdfff8 	addiu	sp,sp,-8
bd0019a0:	3c1ca000 	lui	gp,0xa000
bd0019a4:	279c7ff0 	addiu	gp,gp,32752
bd0019a8:	40096002 	mfc0	t1,c0_srsctl
bd0019ac:	01205820 	add	t3,t1,zero
bd0019b0:	7d2a1e80 	ext	t2,t1,0x1a,0x4
bd0019b4:	7d494984 	ins	t1,t2,0x6,0x4
bd0019b8:	40896002 	mtc0	t1,c0_srsctl
bd0019bc:	000000c0 	ehb
bd0019c0:	41dce000 	wrpgpr	gp,gp
bd0019c4:	408b6002 	mtc0	t3,c0_srsctl
bd0019c8:	000000c0 	ehb
bd0019cc:	3c089d00 	lui	t0,0x9d00
bd0019d0:	25082840 	addiu	t0,t0,10304
bd0019d4:	0100f809 	jalr	t0
bd0019d8:	00000000 	nop
bd0019dc:	3c08a000 	lui	t0,0xa000
bd0019e0:	25080000 	addiu	t0,t0,0
bd0019e4:	3c09a000 	lui	t1,0xa000
bd0019e8:	25290010 	addiu	t1,t1,16
bd0019ec:	10000006 	b	bd001a08 <_bss_check>
bd0019f0:	00000000 	nop

bd0019f4 <_bss_init>:
bd0019f4:	ad000000 	sw	zero,0(t0)
bd0019f8:	ad000004 	sw	zero,4(t0)
bd0019fc:	ad000008 	sw	zero,8(t0)
bd001a00:	ad00000c 	sw	zero,12(t0)
bd001a04:	25080010 	addiu	t0,t0,16

bd001a08 <_bss_check>:
bd001a08:	0109082b 	sltu	at,t0,t1
bd001a0c:	1420fff9 	bnez	at,bd0019f4 <_bss_init>
bd001a10:	00000000 	nop

bd001a14 <_dinit_init>:
bd001a14:	3c089d00 	lui	t0,0x9d00
bd001a18:	25082830 	addiu	t0,t0,10288
bd001a1c:	8d090000 	lw	t1,0(t0)
bd001a20:	11200018 	beqz	t1,bd001a84 <_dinit_end+0x18>
bd001a24:	25080004 	addiu	t0,t0,4
bd001a28:	8d0a0000 	lw	t2,0(t0)
bd001a2c:	25080004 	addiu	t0,t0,4
bd001a30:	8d0b0000 	lw	t3,0(t0)
bd001a34:	11600009 	beqz	t3,bd001a5c <_dinit_clear>
bd001a38:	25080004 	addiu	t0,t0,4

bd001a3c <_dinit_copy>:
bd001a3c:	910c0000 	lbu	t4,0(t0)
bd001a40:	254affff 	addiu	t2,t2,-1
bd001a44:	25080001 	addiu	t0,t0,1
bd001a48:	a12c0000 	sb	t4,0(t1)
bd001a4c:	1540fffb 	bnez	t2,bd001a3c <_dinit_copy>
bd001a50:	25290001 	addiu	t1,t1,1
bd001a54:	10000005 	b	bd001a6c <_dinit_end>
bd001a58:	00000000 	nop

bd001a5c <_dinit_clear>:
bd001a5c:	a1200000 	sb	zero,0(t1)
bd001a60:	254affff 	addiu	t2,t2,-1
bd001a64:	1540fffd 	bnez	t2,bd001a5c <_dinit_clear>
bd001a68:	25290001 	addiu	t1,t1,1

bd001a6c <_dinit_end>:
bd001a6c:	25080003 	addiu	t0,t0,3
bd001a70:	240afffc 	li	t2,-4
bd001a74:	01484024 	and	t0,t2,t0
bd001a78:	8d090000 	lw	t1,0(t0)
bd001a7c:	1520ffe7 	bnez	t1,bd001a1c <_dinit_init+0x8>
bd001a80:	00000000 	nop
bd001a84:	3c090000 	lui	t1,0x0
bd001a88:	25290000 	addiu	t1,t1,0
bd001a8c:	11200010 	beqz	t1,bd001ad0 <_ramfunc_done>
bd001a90:	00000000 	nop
bd001a94:	3c090002 	lui	t1,0x2
bd001a98:	25290000 	addiu	t1,t1,0
bd001a9c:	3c0abf88 	lui	t2,0xbf88
bd001aa0:	254a2010 	addiu	t2,t2,8208
bd001aa4:	ad490000 	sw	t1,0(t2)
bd001aa8:	3c090002 	lui	t1,0x2
bd001aac:	25290000 	addiu	t1,t1,0
bd001ab0:	3c0abf88 	lui	t2,0xbf88
bd001ab4:	254a2020 	addiu	t2,t2,8224
bd001ab8:	ad490000 	sw	t1,0(t2)
bd001abc:	3c090002 	lui	t1,0x2
bd001ac0:	25290000 	addiu	t1,t1,0
bd001ac4:	3c0abf88 	lui	t2,0xbf88
bd001ac8:	254a2030 	addiu	t2,t2,8240
bd001acc:	ad490000 	sw	t1,0(t2)

bd001ad0 <_ramfunc_done>:
bd001ad0:	40804800 	mtc0	zero,c0_count
bd001ad4:	240affff 	li	t2,-1
bd001ad8:	408a5800 	mtc0	t2,c0_compare
bd001adc:	3c080040 	lui	t0,0x40
bd001ae0:	400a6000 	mfc0	t2,c0_status
bd001ae4:	010a5025 	or	t2,t0,t2
bd001ae8:	408a6000 	mtc0	t2,c0_status
bd001aec:	3c099d00 	lui	t1,0x9d00
bd001af0:	25290000 	addiu	t1,t1,0
bd001af4:	000000c0 	ehb
bd001af8:	40897801 	mtc0	t1,c0_ebase
bd001afc:	3c090000 	lui	t1,0x0
bd001b00:	25290001 	addiu	t1,t1,1
bd001b04:	240a0000 	li	t2,0
bd001b08:	7d2a4944 	ins	t2,t1,0x5,0x5
bd001b0c:	408a6001 	mtc0	t2,c0_intctl
bd001b10:	3c090080 	lui	t1,0x80
bd001b14:	40896800 	mtc0	t1,c0_cause
bd001b18:	40088000 	mfc0	t0,c0_config
bd001b1c:	7d090580 	ext	t1,t0,0x16,0x1
bd001b20:	00094c40 	sll	t1,t1,0x11
bd001b24:	40086000 	mfc0	t0,c0_status
bd001b28:	3c010058 	lui	at,0x58
bd001b2c:	01014024 	and	t0,t0,at
bd001b30:	01284025 	or	t0,t1,t0
bd001b34:	40886000 	mtc0	t0,c0_status
bd001b38:	000000c0 	ehb
bd001b3c:	3c089d00 	lui	t0,0x9d00
bd001b40:	25082848 	addiu	t0,t0,10312
bd001b44:	0100f809 	jalr	t0
bd001b48:	00000000 	nop
bd001b4c:	40086000 	mfc0	t0,c0_status
bd001b50:	3c01ffbf 	lui	at,0xffbf
bd001b54:	3421ffff 	ori	at,at,0xffff
bd001b58:	01014024 	and	t0,t0,at
bd001b5c:	40886000 	mtc0	t0,c0_status
bd001b60:	30840000 	andi	a0,a0,0x0
bd001b64:	30a50000 	andi	a1,a1,0x0
bd001b68:	3c089d00 	lui	t0,0x9d00
bd001b6c:	250826a8 	addiu	t0,t0,9896
bd001b70:	01000008 	jr	t0
bd001b74:	00000000 	nop

Disassembly of section .bev_excpt:

bd001cf0 <_bev_exception>:
bd001cf0:	3c1a9d00 	lui	k0,0x9d00
bd001cf4:	275a26fc 	addiu	k0,k0,9980
bd001cf8:	03400008 	jr	k0
bd001cfc:	00000000 	nop

Disassembly of section .app_excpt:

9d000180 <_gen_exception>:
9d000180:	3c1a9d00 	lui	k0,0x9d00
9d000184:	275a25cc 	addiu	k0,k0,9676
9d000188:	03400008 	jr	k0
9d00018c:	00000000 	nop

Disassembly of section .vector_0:

9d000200 <__vector_dispatch_0>:
9d000200:	0b4009e3 	j	9d00278c <.LFE0>
9d000204:	00000000 	nop

Disassembly of section .vector_1:

9d000220 <__vector_dispatch_1>:
9d000220:	0b4009e3 	j	9d00278c <.LFE0>
9d000224:	00000000 	nop

Disassembly of section .vector_2:

9d000240 <__vector_dispatch_2>:
9d000240:	0b4009e3 	j	9d00278c <.LFE0>
9d000244:	00000000 	nop

Disassembly of section .vector_3:

9d000260 <__vector_dispatch_3>:
9d000260:	0b4009e3 	j	9d00278c <.LFE0>
9d000264:	00000000 	nop

Disassembly of section .vector_4:

9d000280 <__vector_dispatch_4>:
9d000280:	0b4009e3 	j	9d00278c <.LFE0>
9d000284:	00000000 	nop

Disassembly of section .vector_5:

9d0002a0 <__vector_dispatch_5>:
9d0002a0:	0b4009e3 	j	9d00278c <.LFE0>
9d0002a4:	00000000 	nop

Disassembly of section .vector_6:

9d0002c0 <__vector_dispatch_6>:
9d0002c0:	0b4009e3 	j	9d00278c <.LFE0>
9d0002c4:	00000000 	nop

Disassembly of section .vector_7:

9d0002e0 <__vector_dispatch_7>:
9d0002e0:	0b4009e3 	j	9d00278c <.LFE0>
9d0002e4:	00000000 	nop

Disassembly of section .vector_8:

9d000300 <__vector_dispatch_8>:
9d000300:	0b4009e3 	j	9d00278c <.LFE0>
9d000304:	00000000 	nop

Disassembly of section .vector_9:

9d000320 <__vector_dispatch_9>:
9d000320:	0b4009e3 	j	9d00278c <.LFE0>
9d000324:	00000000 	nop

Disassembly of section .vector_10:

9d000340 <__vector_dispatch_10>:
9d000340:	0b4009e3 	j	9d00278c <.LFE0>
9d000344:	00000000 	nop

Disassembly of section .vector_11:

9d000360 <__vector_dispatch_11>:
9d000360:	0b4009e3 	j	9d00278c <.LFE0>
9d000364:	00000000 	nop

Disassembly of section .vector_12:

9d000380 <__vector_dispatch_12>:
9d000380:	0b4009e3 	j	9d00278c <.LFE0>
9d000384:	00000000 	nop

Disassembly of section .vector_13:

9d0003a0 <__vector_dispatch_13>:
9d0003a0:	0b4009e3 	j	9d00278c <.LFE0>
9d0003a4:	00000000 	nop

Disassembly of section .vector_14:

9d0003c0 <__vector_dispatch_14>:
9d0003c0:	0b4009e3 	j	9d00278c <.LFE0>
9d0003c4:	00000000 	nop

Disassembly of section .vector_15:

9d0003e0 <__vector_dispatch_15>:
9d0003e0:	0b4009e3 	j	9d00278c <.LFE0>
9d0003e4:	00000000 	nop

Disassembly of section .vector_16:

9d000400 <__vector_dispatch_16>:
9d000400:	0b4009e3 	j	9d00278c <.LFE0>
9d000404:	00000000 	nop

Disassembly of section .vector_17:

9d000420 <__vector_dispatch_17>:
9d000420:	0b4009e3 	j	9d00278c <.LFE0>
9d000424:	00000000 	nop

Disassembly of section .vector_18:

9d000440 <__vector_dispatch_18>:
9d000440:	0b4009e3 	j	9d00278c <.LFE0>
9d000444:	00000000 	nop

Disassembly of section .vector_19:

9d000460 <__vector_dispatch_19>:
9d000460:	0b4009e3 	j	9d00278c <.LFE0>
9d000464:	00000000 	nop

Disassembly of section .vector_20:

9d000480 <__vector_dispatch_20>:
9d000480:	0b4009e3 	j	9d00278c <.LFE0>
9d000484:	00000000 	nop

Disassembly of section .vector_21:

9d0004a0 <__vector_dispatch_21>:
9d0004a0:	0b4009e3 	j	9d00278c <.LFE0>
9d0004a4:	00000000 	nop

Disassembly of section .vector_22:

9d0004c0 <__vector_dispatch_22>:
9d0004c0:	0b4009e3 	j	9d00278c <.LFE0>
9d0004c4:	00000000 	nop

Disassembly of section .vector_23:

9d0004e0 <__vector_dispatch_23>:
9d0004e0:	0b4009e3 	j	9d00278c <.LFE0>
9d0004e4:	00000000 	nop

Disassembly of section .vector_24:

9d000500 <__vector_dispatch_24>:
9d000500:	0b4009e3 	j	9d00278c <.LFE0>
9d000504:	00000000 	nop

Disassembly of section .vector_25:

9d000520 <__vector_dispatch_25>:
9d000520:	0b4009e3 	j	9d00278c <.LFE0>
9d000524:	00000000 	nop

Disassembly of section .vector_26:

9d000540 <__vector_dispatch_26>:
9d000540:	0b4007fd 	j	9d001ff4 <CNISR>
9d000544:	00000000 	nop

Disassembly of section .vector_27:

9d000560 <__vector_dispatch_27>:
9d000560:	0b4009e3 	j	9d00278c <.LFE0>
9d000564:	00000000 	nop

Disassembly of section .vector_28:

9d000580 <__vector_dispatch_28>:
9d000580:	0b4009e3 	j	9d00278c <.LFE0>
9d000584:	00000000 	nop

Disassembly of section .vector_29:

9d0005a0 <__vector_dispatch_29>:
9d0005a0:	0b4009e3 	j	9d00278c <.LFE0>
9d0005a4:	00000000 	nop

Disassembly of section .vector_30:

9d0005c0 <__vector_dispatch_30>:
9d0005c0:	0b4009e3 	j	9d00278c <.LFE0>
9d0005c4:	00000000 	nop

Disassembly of section .vector_31:

9d0005e0 <__vector_dispatch_31>:
9d0005e0:	0b4009e3 	j	9d00278c <.LFE0>
9d0005e4:	00000000 	nop

Disassembly of section .vector_32:

9d000600 <__vector_dispatch_32>:
9d000600:	0b4009e3 	j	9d00278c <.LFE0>
9d000604:	00000000 	nop

Disassembly of section .vector_33:

9d000620 <__vector_dispatch_33>:
9d000620:	0b4009e3 	j	9d00278c <.LFE0>
9d000624:	00000000 	nop

Disassembly of section .vector_34:

9d000640 <__vector_dispatch_34>:
9d000640:	0b4009e3 	j	9d00278c <.LFE0>
9d000644:	00000000 	nop

Disassembly of section .vector_35:

9d000660 <__vector_dispatch_35>:
9d000660:	0b4009e3 	j	9d00278c <.LFE0>
9d000664:	00000000 	nop

Disassembly of section .vector_36:

9d000680 <__vector_dispatch_36>:
9d000680:	0b4009e3 	j	9d00278c <.LFE0>
9d000684:	00000000 	nop

Disassembly of section .vector_37:

9d0006a0 <__vector_dispatch_37>:
9d0006a0:	0b4009e3 	j	9d00278c <.LFE0>
9d0006a4:	00000000 	nop

Disassembly of section .vector_38:

9d0006c0 <__vector_dispatch_38>:
9d0006c0:	0b4009e3 	j	9d00278c <.LFE0>
9d0006c4:	00000000 	nop

Disassembly of section .vector_39:

9d0006e0 <__vector_dispatch_39>:
9d0006e0:	0b4009e3 	j	9d00278c <.LFE0>
9d0006e4:	00000000 	nop

Disassembly of section .vector_40:

9d000700 <__vector_dispatch_40>:
9d000700:	0b4009e3 	j	9d00278c <.LFE0>
9d000704:	00000000 	nop

Disassembly of section .vector_41:

9d000720 <__vector_dispatch_41>:
9d000720:	0b4009e3 	j	9d00278c <.LFE0>
9d000724:	00000000 	nop

Disassembly of section .vector_42:

9d000740 <__vector_dispatch_42>:
9d000740:	0b4009e3 	j	9d00278c <.LFE0>
9d000744:	00000000 	nop

Disassembly of section .vector_43:

9d000760 <__vector_dispatch_43>:
9d000760:	0b4009e3 	j	9d00278c <.LFE0>
9d000764:	00000000 	nop

Disassembly of section .vector_44:

9d000780 <__vector_dispatch_44>:
9d000780:	0b4009e3 	j	9d00278c <.LFE0>
9d000784:	00000000 	nop

Disassembly of section .vector_45:

9d0007a0 <__vector_dispatch_45>:
9d0007a0:	0b4009e3 	j	9d00278c <.LFE0>
9d0007a4:	00000000 	nop

Disassembly of section .vector_46:

9d0007c0 <__vector_dispatch_46>:
9d0007c0:	0b4009e3 	j	9d00278c <.LFE0>
9d0007c4:	00000000 	nop

Disassembly of section .vector_47:

9d0007e0 <__vector_dispatch_47>:
9d0007e0:	0b4009e3 	j	9d00278c <.LFE0>
9d0007e4:	00000000 	nop

Disassembly of section .vector_48:

9d000800 <__vector_dispatch_48>:
9d000800:	0b4009e3 	j	9d00278c <.LFE0>
9d000804:	00000000 	nop

Disassembly of section .vector_49:

9d000820 <__vector_dispatch_49>:
9d000820:	0b4009e3 	j	9d00278c <.LFE0>
9d000824:	00000000 	nop

Disassembly of section .vector_50:

9d000840 <__vector_dispatch_50>:
9d000840:	0b4009e3 	j	9d00278c <.LFE0>
9d000844:	00000000 	nop

Disassembly of section .vector_51:

9d000860 <__vector_dispatch_51>:
9d000860:	0b4009e3 	j	9d00278c <.LFE0>
9d000864:	00000000 	nop

Disassembly of section ._debug_exception:

bfc00480 <__DbgExecReturn>:
bfc00480:	409bf800 	mtc0	k1,c0_desave
bfc00484:	000000c0 	ehb
bfc00488:	3c1b9d00 	lui	k1,0x9d00
bfc0048c:	277b27d4 	addiu	k1,k1,10196
bfc00490:	13600002 	beqz	k1,bfc0049c <__DbgExecReturn+0x1c>
bfc00494:	00000000 	nop
bfc00498:	409bc000 	mtc0	k1,c0_depc
bfc0049c:	401bf800 	mfc0	k1,c0_desave
bfc004a0:	000000c0 	ehb
bfc004a4:	4200001f 	deret
bfc004a8:	00000000 	nop

Disassembly of section .text:

9d001e00 <adc_sample_convert>:

#define DELAYTIME 5000000 // 5 million
void delay(void);
void greenLight(void);
void redLight(void);
unsigned int adc_sample_convert(int pin) { // sample & convert the value on the given 
9d001e00:	27bdfff0 	addiu	sp,sp,-16
9d001e04:	afbf000c 	sw	ra,12(sp)
9d001e08:	afbe0008 	sw	s8,8(sp)
9d001e0c:	03a0f021 	move	s8,sp
9d001e10:	afc40010 	sw	a0,16(s8)
                                           // adc pin the pin should be configured as an 
                                           // analog input in AD1PCFG
    unsigned int elapsed = 0, finish_time = 0;
9d001e14:	afc00000 	sw	zero,0(s8)
9d001e18:	afc00004 	sw	zero,4(s8)
    AD1CHSbits.CH0SA = pin;                // connect chosen pin to MUXA for sampling
9d001e1c:	8fc20010 	lw	v0,16(s8)
9d001e20:	304200ff 	andi	v0,v0,0xff
9d001e24:	3042000f 	andi	v0,v0,0xf
9d001e28:	304400ff 	andi	a0,v0,0xff
9d001e2c:	3c03bf81 	lui	v1,0xbf81
9d001e30:	8c629040 	lw	v0,-28608(v1)
9d001e34:	7c829c04 	ins	v0,a0,0x10,0x4
9d001e38:	ac629040 	sw	v0,-28608(v1)
    AD1CON1bits.SAMP = 1;                  // start sampling
9d001e3c:	3c03bf81 	lui	v1,0xbf81
9d001e40:	94629000 	lhu	v0,-28672(v1)
9d001e44:	24040001 	li	a0,1
9d001e48:	7c820844 	ins	v0,a0,0x1,0x1
9d001e4c:	a4629000 	sh	v0,-28672(v1)
    elapsed = _CP0_GET_COUNT();
9d001e50:	40024800 	mfc0	v0,c0_count
9d001e54:	afc20000 	sw	v0,0(s8)
    finish_time = elapsed + SAMPLE_TIME;
9d001e58:	8fc20000 	lw	v0,0(s8)
9d001e5c:	2442000a 	addiu	v0,v0,10
9d001e60:	afc20004 	sw	v0,4(s8)
    while (_CP0_GET_COUNT() < finish_time) { 
9d001e64:	00000000 	nop
9d001e68:	40034800 	mfc0	v1,c0_count
9d001e6c:	8fc20004 	lw	v0,4(s8)
9d001e70:	0062102b 	sltu	v0,v1,v0
9d001e74:	1440fffc 	bnez	v0,9d001e68 <adc_sample_convert+0x68>
9d001e78:	00000000 	nop
      ;                                   // sample for more than 250 ns
    }
    AD1CON1bits.SAMP = 0;                 // stop sampling and start converting
9d001e7c:	3c03bf81 	lui	v1,0xbf81
9d001e80:	94629000 	lhu	v0,-28672(v1)
9d001e84:	7c020844 	ins	v0,zero,0x1,0x1
9d001e88:	a4629000 	sh	v0,-28672(v1)
    while (!AD1CON1bits.DONE) {
9d001e8c:	00000000 	nop
9d001e90:	3c02bf81 	lui	v0,0xbf81
9d001e94:	8c429000 	lw	v0,-28672(v0)
9d001e98:	30420001 	andi	v0,v0,0x1
9d001e9c:	1040fffc 	beqz	v0,9d001e90 <adc_sample_convert+0x90>
9d001ea0:	00000000 	nop
      ;                                   // wait for the conversion process to finish
    }
    return ADC1BUF0;                      // read the buffer with the result
9d001ea4:	3c02bf81 	lui	v0,0xbf81
9d001ea8:	8c429070 	lw	v0,-28560(v0)
}
9d001eac:	03c0e821 	move	sp,s8
9d001eb0:	8fbf000c 	lw	ra,12(sp)
9d001eb4:	8fbe0008 	lw	s8,8(sp)
9d001eb8:	27bd0010 	addiu	sp,sp,16
9d001ebc:	03e00008 	jr	ra
9d001ec0:	00000000 	nop

9d001ec4 <outPort>:

volatile unsigned int oldB = 0, oldF = 0, newB = 0, newF = 0; // save port values

void outPort(unsigned char data){ 
9d001ec4:	27bdfff0 	addiu	sp,sp,-16
9d001ec8:	afbe000c 	sw	s8,12(sp)
9d001ecc:	03a0f021 	move	s8,sp
9d001ed0:	00801021 	move	v0,a0
9d001ed4:	a3c20010 	sb	v0,16(s8)
	unsigned char bits; 
	for (bits=0x80; bits!=0; bits >>= 1) { 
9d001ed8:	2402ff80 	li	v0,-128
9d001edc:	a3c20000 	sb	v0,0(s8)
9d001ee0:	0b4007d8 	j	9d001f60 <outPort+0x9c>
9d001ee4:	00000000 	nop
		if ((bits & data) == bits){           // send Data 
9d001ee8:	93c30000 	lbu	v1,0(s8)
9d001eec:	93c20010 	lbu	v0,16(s8)
9d001ef0:	00621024 	and	v0,v1,v0
9d001ef4:	304200ff 	andi	v0,v0,0xff
9d001ef8:	93c30000 	lbu	v1,0(s8)
9d001efc:	14620008 	bne	v1,v0,9d001f20 <outPort+0x5c>
9d001f00:	00000000 	nop
			PORTBbits.RB3 = 1; 
9d001f04:	3c03bf88 	lui	v1,0xbf88
9d001f08:	94626050 	lhu	v0,24656(v1)
9d001f0c:	24040001 	li	a0,1
9d001f10:	7c8218c4 	ins	v0,a0,0x3,0x1
9d001f14:	a4626050 	sh	v0,24656(v1)
9d001f18:	0b4007cc 	j	9d001f30 <outPort+0x6c>
9d001f1c:	00000000 	nop
			} 
		else 
			PORTBbits.RB3 = 0; 
9d001f20:	3c03bf88 	lui	v1,0xbf88
9d001f24:	94626050 	lhu	v0,24656(v1)
9d001f28:	7c0218c4 	ins	v0,zero,0x3,0x1
9d001f2c:	a4626050 	sh	v0,24656(v1)
	PORTBbits.RB0 = 1;                              // Clock the data
9d001f30:	3c03bf88 	lui	v1,0xbf88
9d001f34:	94626050 	lhu	v0,24656(v1)
9d001f38:	24040001 	li	a0,1
9d001f3c:	7c820004 	ins	v0,a0,0x0,0x1
9d001f40:	a4626050 	sh	v0,24656(v1)
	PORTBbits.RB0 = 0; 
9d001f44:	3c03bf88 	lui	v1,0xbf88
9d001f48:	94626050 	lhu	v0,24656(v1)
9d001f4c:	7c020004 	ins	v0,zero,0x0,0x1
9d001f50:	a4626050 	sh	v0,24656(v1)

volatile unsigned int oldB = 0, oldF = 0, newB = 0, newF = 0; // save port values

void outPort(unsigned char data){ 
	unsigned char bits; 
	for (bits=0x80; bits!=0; bits >>= 1) { 
9d001f54:	93c20000 	lbu	v0,0(s8)
9d001f58:	00021042 	srl	v0,v0,0x1
9d001f5c:	a3c20000 	sb	v0,0(s8)
9d001f60:	93c20000 	lbu	v0,0(s8)
9d001f64:	1440ffe0 	bnez	v0,9d001ee8 <outPort+0x24>
9d001f68:	00000000 	nop
		else 
			PORTBbits.RB3 = 0; 
	PORTBbits.RB0 = 1;                              // Clock the data
	PORTBbits.RB0 = 0; 
   } 
   PORTBbits.RB1 = 1;    // Latch the data 
9d001f6c:	3c03bf88 	lui	v1,0xbf88
9d001f70:	94626050 	lhu	v0,24656(v1)
9d001f74:	24040001 	li	a0,1
9d001f78:	7c820844 	ins	v0,a0,0x1,0x1
9d001f7c:	a4626050 	sh	v0,24656(v1)
   PORTBbits.RB1 = 0; 
9d001f80:	3c03bf88 	lui	v1,0xbf88
9d001f84:	94626050 	lhu	v0,24656(v1)
9d001f88:	7c020844 	ins	v0,zero,0x1,0x1
9d001f8c:	a4626050 	sh	v0,24656(v1)
   
} 
9d001f90:	03c0e821 	move	sp,s8
9d001f94:	8fbe000c 	lw	s8,12(sp)
9d001f98:	27bd0010 	addiu	sp,sp,16
9d001f9c:	03e00008 	jr	ra
9d001fa0:	00000000 	nop

9d001fa4 <delay>:

void delay(void) {
9d001fa4:	27bdfff0 	addiu	sp,sp,-16
9d001fa8:	afbe000c 	sw	s8,12(sp)
9d001fac:	03a0f021 	move	s8,sp
  int i;
  for (i = 0; i < DELAYTIME; i++) {
9d001fb0:	afc00000 	sw	zero,0(s8)
9d001fb4:	0b4007f2 	j	9d001fc8 <delay+0x24>
9d001fb8:	00000000 	nop
9d001fbc:	8fc20000 	lw	v0,0(s8)
9d001fc0:	24420001 	addiu	v0,v0,1
9d001fc4:	afc20000 	sw	v0,0(s8)
9d001fc8:	8fc30000 	lw	v1,0(s8)
9d001fcc:	3c02004c 	lui	v0,0x4c
9d001fd0:	34424b40 	ori	v0,v0,0x4b40
9d001fd4:	0062102a 	slt	v0,v1,v0
9d001fd8:	1440fff8 	bnez	v0,9d001fbc <delay+0x18>
9d001fdc:	00000000 	nop
      ; //do nothing
  }
}
9d001fe0:	03c0e821 	move	sp,s8
9d001fe4:	8fbe000c 	lw	s8,12(sp)
9d001fe8:	27bd0010 	addiu	sp,sp,16
9d001fec:	03e00008 	jr	ra
9d001ff0:	00000000 	nop

9d001ff4 <CNISR>:

void __ISR(_CHANGE_NOTICE_VECTOR, IPL3SOFT) CNISR(void) { // INT step 1
9d001ff4:	415de800 	rdpgpr	sp,sp
9d001ff8:	401a7000 	mfc0	k0,c0_epc
9d001ffc:	401b6000 	mfc0	k1,c0_status
9d002000:	27bdffe0 	addiu	sp,sp,-32
9d002004:	afba001c 	sw	k0,28(sp)
9d002008:	401a6002 	mfc0	k0,c0_srsctl
9d00200c:	afbb0018 	sw	k1,24(sp)
9d002010:	afba0014 	sw	k0,20(sp)
9d002014:	7c1b7844 	ins	k1,zero,0x1,0xf
9d002018:	377b0c00 	ori	k1,k1,0xc00
9d00201c:	409b6000 	mtc0	k1,c0_status
9d002020:	afbe000c 	sw	s8,12(sp)
9d002024:	afa40008 	sw	a0,8(sp)
9d002028:	afa30004 	sw	v1,4(sp)
9d00202c:	afa20000 	sw	v0,0(sp)
9d002030:	03a0f021 	move	s8,sp
  newB = PORTB;           // since pins on port B and F are being monitored 
9d002034:	3c02bf88 	lui	v0,0xbf88
9d002038:	8c426050 	lw	v0,24656(v0)
9d00203c:	af828018 	sw	v0,-32744(gp)
  oldB = newB;            // save the current values for future use
9d002040:	8f828018 	lw	v0,-32744(gp)
9d002044:	af828010 	sw	v0,-32752(gp)
  NU32_LED1 = !NU32_LED1; // toggle LED1
9d002048:	3c02bf88 	lui	v0,0xbf88
9d00204c:	8c426160 	lw	v0,24928(v0)
9d002050:	30420001 	andi	v0,v0,0x1
9d002054:	2c420001 	sltiu	v0,v0,1
9d002058:	304400ff 	andi	a0,v0,0xff
9d00205c:	3c03bf88 	lui	v1,0xbf88
9d002060:	90626160 	lbu	v0,24928(v1)
9d002064:	7c820004 	ins	v0,a0,0x0,0x1
9d002068:	a0626160 	sb	v0,24928(v1)
  IFS1bits.CNIF = 0;      // clear the interrupt flag
9d00206c:	3c03bf88 	lui	v1,0xbf88
9d002070:	8c621040 	lw	v0,4160(v1)
9d002074:	7c020004 	ins	v0,zero,0x0,0x1
9d002078:	ac621040 	sw	v0,4160(v1)
}
9d00207c:	03c0e821 	move	sp,s8
9d002080:	8fbe000c 	lw	s8,12(sp)
9d002084:	8fa40008 	lw	a0,8(sp)
9d002088:	8fa30004 	lw	v1,4(sp)
9d00208c:	8fa20000 	lw	v0,0(sp)
9d002090:	41606000 	di
9d002094:	000000c0 	ehb
9d002098:	8fba001c 	lw	k0,28(sp)
9d00209c:	8fbb0018 	lw	k1,24(sp)
9d0020a0:	409a7000 	mtc0	k0,c0_epc
9d0020a4:	8fba0014 	lw	k0,20(sp)
9d0020a8:	27bd0020 	addiu	sp,sp,32
9d0020ac:	409a6002 	mtc0	k0,c0_srsctl
9d0020b0:	41dde800 	wrpgpr	sp,sp
9d0020b4:	409b6000 	mtc0	k1,c0_status
9d0020b8:	42000018 	eret

9d0020bc <main>:
   
int main(void) {
9d0020bc:	27bdffe0 	addiu	sp,sp,-32
9d0020c0:	afbf001c 	sw	ra,28(sp)
9d0020c4:	afbe0018 	sw	s8,24(sp)
9d0020c8:	03a0f021 	move	s8,sp
	unsigned char a;
	PORTBbits.RB1=0;
9d0020cc:	3c03bf88 	lui	v1,0xbf88
9d0020d0:	94626050 	lhu	v0,24656(v1)
9d0020d4:	7c020844 	ins	v0,zero,0x1,0x1
9d0020d8:	a4626050 	sh	v0,24656(v1)
	PORTBbits.RB0=0;
9d0020dc:	3c03bf88 	lui	v1,0xbf88
9d0020e0:	94626050 	lhu	v0,24656(v1)
9d0020e4:	7c020004 	ins	v0,zero,0x0,0x1
9d0020e8:	a4626050 	sh	v0,24656(v1)
	PORTBbits.RB3=0;
9d0020ec:	3c03bf88 	lui	v1,0xbf88
9d0020f0:	94626050 	lhu	v0,24656(v1)
9d0020f4:	7c0218c4 	ins	v0,zero,0x3,0x1
9d0020f8:	a4626050 	sh	v0,24656(v1)
	int gate = 1;
9d0020fc:	24020001 	li	v0,1
9d002100:	afc20010 	sw	v0,16(s8)
	NU32_Startup(); // cache on, min flash wait, interrupts on, LED/button init, UART init
9d002104:	0f4008c6 	jal	9d002318 <NU32_Startup>
9d002108:	00000000 	nop
	AD1PCFG = 0x00FF;       // set B8-B15 as analog in, 0-7 as digital pins
9d00210c:	3c02bf81 	lui	v0,0xbf81
9d002110:	240300ff 	li	v1,255
9d002114:	ac439060 	sw	v1,-28576(v0)
	TRISB = 0xFF00;         // set 0-3as digital outputs,  B4-B7 as digital inputs
9d002118:	3c02bf88 	lui	v0,0xbf88
9d00211c:	3403ff00 	li	v1,0xff00
9d002120:	ac436040 	sw	v1,24640(v0)
	TRISBbits.TRISB0 = 0;
9d002124:	3c03bf88 	lui	v1,0xbf88
9d002128:	94626040 	lhu	v0,24640(v1)
9d00212c:	7c020004 	ins	v0,zero,0x0,0x1
9d002130:	a4626040 	sh	v0,24640(v1)
	TRISBbits.TRISB1 = 0;
9d002134:	3c03bf88 	lui	v1,0xbf88
9d002138:	94626040 	lhu	v0,24640(v1)
9d00213c:	7c020844 	ins	v0,zero,0x1,0x1
9d002140:	a4626040 	sh	v0,24640(v1)
	TRISBbits.TRISB3 = 0;
9d002144:	3c03bf88 	lui	v1,0xbf88
9d002148:	94626040 	lhu	v0,24640(v1)
9d00214c:	7c0218c4 	ins	v0,zero,0x3,0x1
9d002150:	a4626040 	sh	v0,24640(v1)
	
	unsigned int sample14 = 0;
9d002154:	afc00014 	sw	zero,20(s8)
	AD1PCFGbits.PCFG14 = 0;                 // AN14 is an adc pin
9d002158:	3c03bf81 	lui	v1,0xbf81
9d00215c:	94629060 	lhu	v0,-28576(v1)
9d002160:	7c027384 	ins	v0,zero,0xe,0x1
9d002164:	a4629060 	sh	v0,-28576(v1)
	AD1CON3bits.ADCS = 2;                   // ADC clock period is Tad = 2*(ADCS+1)*Tpb =
9d002168:	3c02bf81 	lui	v0,0xbf81
9d00216c:	24030002 	li	v1,2
9d002170:	a0439020 	sb	v1,-28640(v0)
                                          //                           2*3*12.5ns = 75ns
	AD1CON1bits.ADON = 1;                   // turn on A/D converter
9d002174:	3c03bf81 	lui	v1,0xbf81
9d002178:	94629000 	lhu	v0,-28672(v1)
9d00217c:	24040001 	li	a0,1
9d002180:	7c827bc4 	ins	v0,a0,0xf,0x1
9d002184:	a4629000 	sh	v0,-28672(v1)

	while(1) {                      // carriage return and newline
	sample14 = adc_sample_convert(8);
9d002188:	24040008 	li	a0,8
9d00218c:	0f400780 	jal	9d001e00 <adc_sample_convert>
9d002190:	00000000 	nop
9d002194:	afc20014 	sw	v0,20(s8)
	if (sample14>10 && gate ==1){
9d002198:	8fc20014 	lw	v0,20(s8)
9d00219c:	2c42000b 	sltiu	v0,v0,11
9d0021a0:	1440000b 	bnez	v0,9d0021d0 <main+0x114>
9d0021a4:	00000000 	nop
9d0021a8:	8fc30010 	lw	v1,16(s8)
9d0021ac:	24020001 	li	v0,1
9d0021b0:	14620007 	bne	v1,v0,9d0021d0 <main+0x114>
9d0021b4:	00000000 	nop
		greenLight();
9d0021b8:	0f400884 	jal	9d002210 <greenLight>
9d0021bc:	00000000 	nop
		gate = 2;
9d0021c0:	24020002 	li	v0,2
9d0021c4:	afc20010 	sw	v0,16(s8)
9d0021c8:	0b400882 	j	9d002208 <main+0x14c>
9d0021cc:	00000000 	nop
	}
	else if (sample14>10 && gate ==2){
9d0021d0:	8fc20014 	lw	v0,20(s8)
9d0021d4:	2c42000b 	sltiu	v0,v0,11
9d0021d8:	1440000b 	bnez	v0,9d002208 <main+0x14c>
9d0021dc:	00000000 	nop
9d0021e0:	8fc30010 	lw	v1,16(s8)
9d0021e4:	24020002 	li	v0,2
9d0021e8:	14620007 	bne	v1,v0,9d002208 <main+0x14c>
9d0021ec:	00000000 	nop
		redLight();
9d0021f0:	0f4008a5 	jal	9d002294 <redLight>
9d0021f4:	00000000 	nop
		gate = 1;
9d0021f8:	24020001 	li	v0,1
9d0021fc:	afc20010 	sw	v0,16(s8)
	}		
		
	}
9d002200:	0b400862 	j	9d002188 <main+0xcc>
9d002204:	00000000 	nop
9d002208:	0b400862 	j	9d002188 <main+0xcc>
9d00220c:	00000000 	nop

9d002210 <greenLight>:
	return 0;
}

void greenLight(void){
9d002210:	27bdffe8 	addiu	sp,sp,-24
9d002214:	afbf0014 	sw	ra,20(sp)
9d002218:	afbe0010 	sw	s8,16(sp)
9d00221c:	03a0f021 	move	s8,sp
	outPort(8);
9d002220:	24040008 	li	a0,8
9d002224:	0f4007b1 	jal	9d001ec4 <outPort>
9d002228:	00000000 	nop
	delay();
9d00222c:	0f4007e9 	jal	9d001fa4 <delay>
9d002230:	00000000 	nop
	outPort(4);
9d002234:	24040004 	li	a0,4
9d002238:	0f4007b1 	jal	9d001ec4 <outPort>
9d00223c:	00000000 	nop
	delay();
9d002240:	0f4007e9 	jal	9d001fa4 <delay>
9d002244:	00000000 	nop
	outPort(2);
9d002248:	24040002 	li	a0,2
9d00224c:	0f4007b1 	jal	9d001ec4 <outPort>
9d002250:	00000000 	nop
	delay();
9d002254:	0f4007e9 	jal	9d001fa4 <delay>
9d002258:	00000000 	nop
	outPort(1);
9d00225c:	24040001 	li	a0,1
9d002260:	0f4007b1 	jal	9d001ec4 <outPort>
9d002264:	00000000 	nop
	delay();
9d002268:	0f4007e9 	jal	9d001fa4 <delay>
9d00226c:	00000000 	nop
	outPort(0);
9d002270:	00002021 	move	a0,zero
9d002274:	0f4007b1 	jal	9d001ec4 <outPort>
9d002278:	00000000 	nop
}
9d00227c:	03c0e821 	move	sp,s8
9d002280:	8fbf0014 	lw	ra,20(sp)
9d002284:	8fbe0010 	lw	s8,16(sp)
9d002288:	27bd0018 	addiu	sp,sp,24
9d00228c:	03e00008 	jr	ra
9d002290:	00000000 	nop

9d002294 <redLight>:

void redLight(void){
9d002294:	27bdffe8 	addiu	sp,sp,-24
9d002298:	afbf0014 	sw	ra,20(sp)
9d00229c:	afbe0010 	sw	s8,16(sp)
9d0022a0:	03a0f021 	move	s8,sp
	outPort(16);
9d0022a4:	24040010 	li	a0,16
9d0022a8:	0f4007b1 	jal	9d001ec4 <outPort>
9d0022ac:	00000000 	nop
	delay();
9d0022b0:	0f4007e9 	jal	9d001fa4 <delay>
9d0022b4:	00000000 	nop
	outPort(32);
9d0022b8:	24040020 	li	a0,32
9d0022bc:	0f4007b1 	jal	9d001ec4 <outPort>
9d0022c0:	00000000 	nop
	delay();
9d0022c4:	0f4007e9 	jal	9d001fa4 <delay>
9d0022c8:	00000000 	nop
	outPort(64);
9d0022cc:	24040040 	li	a0,64
9d0022d0:	0f4007b1 	jal	9d001ec4 <outPort>
9d0022d4:	00000000 	nop
	delay();
9d0022d8:	0f4007e9 	jal	9d001fa4 <delay>
9d0022dc:	00000000 	nop
	outPort(128);
9d0022e0:	24040080 	li	a0,128
9d0022e4:	0f4007b1 	jal	9d001ec4 <outPort>
9d0022e8:	00000000 	nop
	delay();
9d0022ec:	0f4007e9 	jal	9d001fa4 <delay>
9d0022f0:	00000000 	nop
	outPort(0);
9d0022f4:	00002021 	move	a0,zero
9d0022f8:	0f4007b1 	jal	9d001ec4 <outPort>
9d0022fc:	00000000 	nop
9d002300:	03c0e821 	move	sp,s8
9d002304:	8fbf0014 	lw	ra,20(sp)
9d002308:	8fbe0010 	lw	s8,16(sp)
9d00230c:	27bd0018 	addiu	sp,sp,24
9d002310:	03e00008 	jr	ra
9d002314:	00000000 	nop

9d002318 <NU32_Startup>:

// Perform startup routines:
//  Make NU32_LED1 and NU32_LED2 pins outputs (NU32_USER is by default an input)
//  Initialize the serial port - UART3 (no interrupt) 
//  Enable interrupts
void NU32_Startup() {
9d002318:	27bdfff8 	addiu	sp,sp,-8
9d00231c:	afbf0004 	sw	ra,4(sp)
9d002320:	afbe0000 	sw	s8,0(sp)
9d002324:	03a0f021 	move	s8,sp
  // disable interrupts
  __builtin_disable_interrupts();
9d002328:	41626000 	di	v0
9d00232c:	000000c0 	ehb
9d002330:	00000000 	nop
  // see Chapter 2 "CPU for Devices with M4K Core" of the PIC32 reference manual
  // most of the other bits have prescribed values
  // microchip does not provide a _CP0_SET_CONFIG macro, so we directly use
  // the compiler built-in command _mtc0
  // to disable cache, use 0xa4210582 
  __builtin_mtc0(_CP0_CONFIG, _CP0_CONFIG_SELECT, 0xa4210583); 
9d002334:	3c02a421 	lui	v0,0xa421
9d002338:	34420583 	ori	v0,v0,0x583
9d00233c:	40828000 	mtc0	v0,c0_config
9d002340:	000000c0 	ehb
  
  // set the prefectch cache wait state to 2, as per the
  // electrical characteristics data sheet
  CHECONbits.PFMWS = 0x2;   
9d002344:	3c03bf88 	lui	v1,0xbf88
9d002348:	8c624000 	lw	v0,16384(v1)
9d00234c:	24040002 	li	a0,2
9d002350:	7c821004 	ins	v0,a0,0x0,0x3
9d002354:	ac624000 	sw	v0,16384(v1)

  //enable prefetch for cacheable and noncacheable memory
  CHECONbits.PREFEN = 0x3; 
9d002358:	3c03bf88 	lui	v1,0xbf88
9d00235c:	8c624000 	lw	v0,16384(v1)
9d002360:	24040003 	li	a0,3
9d002364:	7c822904 	ins	v0,a0,0x4,0x2
9d002368:	ac624000 	sw	v0,16384(v1)

  // 0 data RAM access wait states
  BMXCONbits.BMXWSDRM = 0x0;
9d00236c:	3c03bf88 	lui	v1,0xbf88
9d002370:	8c622000 	lw	v0,8192(v1)
9d002374:	7c023184 	ins	v0,zero,0x6,0x1
9d002378:	ac622000 	sw	v0,8192(v1)
  
  // enable multi vector interrupts
  INTCONbits.MVEC = 0x1;
9d00237c:	3c03bf88 	lui	v1,0xbf88
9d002380:	8c621000 	lw	v0,4096(v1)
9d002384:	24040001 	li	a0,1
9d002388:	7c826304 	ins	v0,a0,0xc,0x1
9d00238c:	ac621000 	sw	v0,4096(v1)

  // disable JTAG to get B10, B11, B12 and B13 back
  DDPCONbits.JTAGEN = 0;
9d002390:	3c03bf81 	lui	v1,0xbf81
9d002394:	9062f200 	lbu	v0,-3584(v1)
9d002398:	7c0218c4 	ins	v0,zero,0x3,0x1
9d00239c:	a062f200 	sb	v0,-3584(v1)

  TRISFCLR = 0x0003;  // Make F0 and F1 outputs (LED1 and LED2)
9d0023a0:	3c02bf88 	lui	v0,0xbf88
9d0023a4:	24030003 	li	v1,3
9d0023a8:	ac436144 	sw	v1,24900(v0)
  NU32_LED1 = 1;      // LED1 is off
9d0023ac:	3c03bf88 	lui	v1,0xbf88
9d0023b0:	90626160 	lbu	v0,24928(v1)
9d0023b4:	24040001 	li	a0,1
9d0023b8:	7c820004 	ins	v0,a0,0x0,0x1
9d0023bc:	a0626160 	sb	v0,24928(v1)
  NU32_LED2 = 0;      // LED2 is on
9d0023c0:	3c03bf88 	lui	v1,0xbf88
9d0023c4:	90626160 	lbu	v0,24928(v1)
9d0023c8:	7c020844 	ins	v0,zero,0x1,0x1
9d0023cc:	a0626160 	sb	v0,24928(v1)

  // turn on UART3 without an interrupt
  U3MODEbits.BRGH = 0; // set baud to NU32_DESIRED_BAUD
9d0023d0:	3c03bf80 	lui	v1,0xbf80
9d0023d4:	94626400 	lhu	v0,25600(v1)
9d0023d8:	7c0218c4 	ins	v0,zero,0x3,0x1
9d0023dc:	a4626400 	sh	v0,25600(v1)
  U3BRG = ((NU32_SYS_FREQ / NU32_DESIRED_BAUD) / 16) - 1;
9d0023e0:	3c02bf80 	lui	v0,0xbf80
9d0023e4:	24030014 	li	v1,20
9d0023e8:	ac436440 	sw	v1,25664(v0)

  // 8 bit, no parity bit, and 1 stop bit (8N1 setup)
  U3MODEbits.PDSEL = 0;
9d0023ec:	3c03bf80 	lui	v1,0xbf80
9d0023f0:	94626400 	lhu	v0,25600(v1)
9d0023f4:	7c021044 	ins	v0,zero,0x1,0x2
9d0023f8:	a4626400 	sh	v0,25600(v1)
  U3MODEbits.STSEL = 0;
9d0023fc:	3c03bf80 	lui	v1,0xbf80
9d002400:	94626400 	lhu	v0,25600(v1)
9d002404:	7c020004 	ins	v0,zero,0x0,0x1
9d002408:	a4626400 	sh	v0,25600(v1)

  // configure TX & RX pins as output & input pins
  U3STAbits.UTXEN = 1;
9d00240c:	3c03bf80 	lui	v1,0xbf80
9d002410:	8c626410 	lw	v0,25616(v1)
9d002414:	24040001 	li	a0,1
9d002418:	7c825284 	ins	v0,a0,0xa,0x1
9d00241c:	ac626410 	sw	v0,25616(v1)
  U3STAbits.URXEN = 1;
9d002420:	3c03bf80 	lui	v1,0xbf80
9d002424:	8c626410 	lw	v0,25616(v1)
9d002428:	24040001 	li	a0,1
9d00242c:	7c826304 	ins	v0,a0,0xc,0x1
9d002430:	ac626410 	sw	v0,25616(v1)
  // configure hardware flow control using RTS and CTS
  U3MODEbits.UEN = 2;
9d002434:	3c03bf80 	lui	v1,0xbf80
9d002438:	94626400 	lhu	v0,25600(v1)
9d00243c:	24040002 	li	a0,2
9d002440:	7c824a04 	ins	v0,a0,0x8,0x2
9d002444:	a4626400 	sh	v0,25600(v1)

  // enable the uart
  U3MODEbits.ON = 1;
9d002448:	3c03bf80 	lui	v1,0xbf80
9d00244c:	94626400 	lhu	v0,25600(v1)
9d002450:	24040001 	li	a0,1
9d002454:	7c827bc4 	ins	v0,a0,0xf,0x1
9d002458:	a4626400 	sh	v0,25600(v1)

  __builtin_enable_interrupts();
9d00245c:	41626020 	ei	v0
}
9d002460:	03c0e821 	move	sp,s8
9d002464:	8fbf0004 	lw	ra,4(sp)
9d002468:	8fbe0000 	lw	s8,0(sp)
9d00246c:	27bd0008 	addiu	sp,sp,8
9d002470:	03e00008 	jr	ra
9d002474:	00000000 	nop

9d002478 <NU32_ReadUART3>:

// Read from UART3
// block other functions until you get a '\r' or '\n'
// send the pointer to your char array and the number of elements in the array
void NU32_ReadUART3(char * message, int maxLength) {
9d002478:	27bdffe8 	addiu	sp,sp,-24
9d00247c:	afbe0014 	sw	s8,20(sp)
9d002480:	03a0f021 	move	s8,sp
9d002484:	afc40018 	sw	a0,24(s8)
9d002488:	afc5001c 	sw	a1,28(s8)
  char data = 0;
9d00248c:	a3c00008 	sb	zero,8(s8)
  int complete = 0, num_bytes = 0;
9d002490:	afc00000 	sw	zero,0(s8)
9d002494:	afc00004 	sw	zero,4(s8)
  // loop until you get a '\r' or '\n'
  while (!complete) {
9d002498:	0b40094a 	j	9d002528 <NU32_ReadUART3+0xb0>
9d00249c:	00000000 	nop
    if (U3STAbits.URXDA) { // if data is available
9d0024a0:	3c02bf80 	lui	v0,0xbf80
9d0024a4:	8c426410 	lw	v0,25616(v0)
9d0024a8:	30420001 	andi	v0,v0,0x1
9d0024ac:	1040001e 	beqz	v0,9d002528 <NU32_ReadUART3+0xb0>
9d0024b0:	00000000 	nop
      data = U3RXREG;      // read the data
9d0024b4:	3c02bf80 	lui	v0,0xbf80
9d0024b8:	8c426430 	lw	v0,25648(v0)
9d0024bc:	a3c20008 	sb	v0,8(s8)
      if ((data == '\n') || (data == '\r')) {
9d0024c0:	83c30008 	lb	v1,8(s8)
9d0024c4:	2402000a 	li	v0,10
9d0024c8:	10620005 	beq	v1,v0,9d0024e0 <NU32_ReadUART3+0x68>
9d0024cc:	00000000 	nop
9d0024d0:	83c30008 	lb	v1,8(s8)
9d0024d4:	2402000d 	li	v0,13
9d0024d8:	14620005 	bne	v1,v0,9d0024f0 <NU32_ReadUART3+0x78>
9d0024dc:	00000000 	nop
        complete = 1;
9d0024e0:	24020001 	li	v0,1
9d0024e4:	afc20000 	sw	v0,0(s8)
9d0024e8:	0b40094a 	j	9d002528 <NU32_ReadUART3+0xb0>
9d0024ec:	00000000 	nop
      } else {
        message[num_bytes] = data;
9d0024f0:	8fc20004 	lw	v0,4(s8)
9d0024f4:	8fc30018 	lw	v1,24(s8)
9d0024f8:	00621021 	addu	v0,v1,v0
9d0024fc:	93c30008 	lbu	v1,8(s8)
9d002500:	a0430000 	sb	v1,0(v0)
        ++num_bytes;
9d002504:	8fc20004 	lw	v0,4(s8)
9d002508:	24420001 	addiu	v0,v0,1
9d00250c:	afc20004 	sw	v0,4(s8)
        // roll over if the array is too small
        if (num_bytes >= maxLength) {
9d002510:	8fc30004 	lw	v1,4(s8)
9d002514:	8fc2001c 	lw	v0,28(s8)
9d002518:	0062102a 	slt	v0,v1,v0
9d00251c:	14400002 	bnez	v0,9d002528 <NU32_ReadUART3+0xb0>
9d002520:	00000000 	nop
          num_bytes = 0;
9d002524:	afc00004 	sw	zero,4(s8)
// send the pointer to your char array and the number of elements in the array
void NU32_ReadUART3(char * message, int maxLength) {
  char data = 0;
  int complete = 0, num_bytes = 0;
  // loop until you get a '\r' or '\n'
  while (!complete) {
9d002528:	8fc20000 	lw	v0,0(s8)
9d00252c:	1040ffdc 	beqz	v0,9d0024a0 <NU32_ReadUART3+0x28>
9d002530:	00000000 	nop
        }
      }
    }
  }
  // end the string
  message[num_bytes] = '\0';
9d002534:	8fc20004 	lw	v0,4(s8)
9d002538:	8fc30018 	lw	v1,24(s8)
9d00253c:	00621021 	addu	v0,v1,v0
9d002540:	a0400000 	sb	zero,0(v0)
}
9d002544:	03c0e821 	move	sp,s8
9d002548:	8fbe0014 	lw	s8,20(sp)
9d00254c:	27bd0018 	addiu	sp,sp,24
9d002550:	03e00008 	jr	ra
9d002554:	00000000 	nop

9d002558 <NU32_WriteUART3>:

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
9d002558:	27bdfff8 	addiu	sp,sp,-8
9d00255c:	afbe0004 	sw	s8,4(sp)
9d002560:	03a0f021 	move	s8,sp
9d002564:	afc40008 	sw	a0,8(s8)
  while (*string != '\0') {
9d002568:	0b40096a 	j	9d0025a8 <NU32_WriteUART3+0x50>
9d00256c:	00000000 	nop
    while (U3STAbits.UTXBF) {
9d002570:	00000000 	nop
9d002574:	3c02bf80 	lui	v0,0xbf80
9d002578:	8c426410 	lw	v0,25616(v0)
9d00257c:	30420200 	andi	v0,v0,0x200
9d002580:	1440fffc 	bnez	v0,9d002574 <NU32_WriteUART3+0x1c>
9d002584:	00000000 	nop
      ; // wait until tx buffer isn't full
    }
    U3TXREG = *string;
9d002588:	8fc20008 	lw	v0,8(s8)
9d00258c:	80420000 	lb	v0,0(v0)
9d002590:	00401821 	move	v1,v0
9d002594:	3c02bf80 	lui	v0,0xbf80
9d002598:	ac436420 	sw	v1,25632(v0)
    ++string;
9d00259c:	8fc20008 	lw	v0,8(s8)
9d0025a0:	24420001 	addiu	v0,v0,1
9d0025a4:	afc20008 	sw	v0,8(s8)
  message[num_bytes] = '\0';
}

// Write a character array using UART3
void NU32_WriteUART3(const char * string) {
  while (*string != '\0') {
9d0025a8:	8fc20008 	lw	v0,8(s8)
9d0025ac:	80420000 	lb	v0,0(v0)
9d0025b0:	1440ffef 	bnez	v0,9d002570 <NU32_WriteUART3+0x18>
9d0025b4:	00000000 	nop
      ; // wait until tx buffer isn't full
    }
    U3TXREG = *string;
    ++string;
  }
}
9d0025b8:	03c0e821 	move	sp,s8
9d0025bc:	8fbe0004 	lw	s8,4(sp)
9d0025c0:	27bd0008 	addiu	sp,sp,8
9d0025c4:	03e00008 	jr	ra
9d0025c8:	00000000 	nop

Disassembly of section .text.general_exception:

9d0025cc <_general_exception_context>:
9d0025cc:	27bdffa8 	addiu	sp,sp,-88
9d0025d0:	afa10004 	sw	at,4(sp)
9d0025d4:	afa20008 	sw	v0,8(sp)
9d0025d8:	afa3000c 	sw	v1,12(sp)
9d0025dc:	afa40010 	sw	a0,16(sp)
9d0025e0:	afa50014 	sw	a1,20(sp)
9d0025e4:	afa60018 	sw	a2,24(sp)
9d0025e8:	afa7001c 	sw	a3,28(sp)
9d0025ec:	afa80020 	sw	t0,32(sp)
9d0025f0:	afa90024 	sw	t1,36(sp)
9d0025f4:	afaa0028 	sw	t2,40(sp)
9d0025f8:	afab002c 	sw	t3,44(sp)
9d0025fc:	afac0030 	sw	t4,48(sp)
9d002600:	afad0034 	sw	t5,52(sp)
9d002604:	afae0038 	sw	t6,56(sp)
9d002608:	afaf003c 	sw	t7,60(sp)
9d00260c:	afb80040 	sw	t8,64(sp)
9d002610:	afb90044 	sw	t9,68(sp)
9d002614:	afbf0048 	sw	ra,72(sp)
9d002618:	00004012 	mflo	t0
9d00261c:	afa8004c 	sw	t0,76(sp)
9d002620:	00004010 	mfhi	t0
9d002624:	afa80050 	sw	t0,80(sp)
9d002628:	3c1a9d00 	lui	k0,0x9d00
9d00262c:	275a2744 	addiu	k0,k0,10052
9d002630:	00000000 	nop
9d002634:	40046800 	mfc0	a0,c0_cause
9d002638:	40056000 	mfc0	a1,c0_status
9d00263c:	0340f809 	jalr	k0
9d002640:	00000000 	nop
9d002644:	8fa80050 	lw	t0,80(sp)
9d002648:	01000011 	mthi	t0
9d00264c:	8fa8004c 	lw	t0,76(sp)
9d002650:	01000013 	mtlo	t0
9d002654:	8fa10004 	lw	at,4(sp)
9d002658:	8fa20008 	lw	v0,8(sp)
9d00265c:	8fa3000c 	lw	v1,12(sp)
9d002660:	8fa40010 	lw	a0,16(sp)
9d002664:	8fa50014 	lw	a1,20(sp)
9d002668:	8fa60018 	lw	a2,24(sp)
9d00266c:	8fa7001c 	lw	a3,28(sp)
9d002670:	8fa80020 	lw	t0,32(sp)
9d002674:	8fa90024 	lw	t1,36(sp)
9d002678:	8faa0028 	lw	t2,40(sp)
9d00267c:	8fab002c 	lw	t3,44(sp)
9d002680:	8fac0030 	lw	t4,48(sp)
9d002684:	8fad0034 	lw	t5,52(sp)
9d002688:	8fae0038 	lw	t6,56(sp)
9d00268c:	8faf003c 	lw	t7,60(sp)
9d002690:	8fb80040 	lw	t8,64(sp)
9d002694:	8fb90044 	lw	t9,68(sp)
9d002698:	8fbf0048 	lw	ra,72(sp)
9d00269c:	27bd0058 	addiu	sp,sp,88
9d0026a0:	000000c0 	ehb
9d0026a4:	42000018 	eret

Disassembly of section .text.main_entry:

9d0026a8 <_main_entry>:
9d0026a8:	3c040000 	lui	a0,0x0
9d0026ac:	27bdffe8 	addiu	sp,sp,-24
9d0026b0:	24840000 	addiu	a0,a0,0
9d0026b4:	10800003 	beqz	a0,9d0026c4 <_main_entry+0x1c>
9d0026b8:	afbf0014 	sw	ra,20(sp)
9d0026bc:	0080f809 	jalr	a0
9d0026c0:	00000000 	nop
9d0026c4:	30840000 	andi	a0,a0,0x0
9d0026c8:	30a50000 	andi	a1,a1,0x0
9d0026cc:	3c089d00 	lui	t0,0x9d00
9d0026d0:	250820bc 	addiu	t0,t0,8380
9d0026d4:	0100f809 	jalr	t0
9d0026d8:	00000000 	nop

9d0026dc <__crt0_exit>:
9d0026dc:	3c020000 24420000 10400003 00000000     ...<..B$..@.....
9d0026ec:	0040f809 00000000 1000fff9 00000000     ..@.............

Disassembly of section .text._bootstrap_exception_handler:

9d0026fc <_bootstrap_exception_handler>:
9d0026fc:	3c020000 	lui	v0,0x0
9d002700:	24420000 	addiu	v0,v0,0
9d002704:	10400005 	beqz	v0,9d00271c <_bootstrap_exception_handler+0x20>
9d002708:	3c020000 	lui	v0,0x0
9d00270c:	24420000 	addiu	v0,v0,0
9d002710:	10400003 	beqz	v0,9d002720 <_bootstrap_exception_handler+0x24>
9d002714:	3c029d00 	lui	v0,0x9d00
9d002718:	7000003f 	sdbbp
9d00271c:	3c029d00 	lui	v0,0x9d00
9d002720:	244227d4 	addiu	v0,v0,10196
9d002724:	10400005 	beqz	v0,9d00273c <_bootstrap_exception_handler+0x40>
9d002728:	00000000 	nop
9d00272c:	27bdffe8 	addiu	sp,sp,-24
9d002730:	afbf0014 	sw	ra,20(sp)
9d002734:	0040f809 	jalr	v0
9d002738:	00000000 	nop
9d00273c:	0b4009cf 	j	9d00273c <_bootstrap_exception_handler+0x40>
9d002740:	00000000 	nop

Disassembly of section .text._general_exception_handler:

9d002744 <_general_exception_handler>:
9d002744:	3c020000 	lui	v0,0x0
9d002748:	24420000 	addiu	v0,v0,0
9d00274c:	10400005 	beqz	v0,9d002764 <_general_exception_handler+0x20>
9d002750:	3c020000 	lui	v0,0x0
9d002754:	24420000 	addiu	v0,v0,0
9d002758:	10400003 	beqz	v0,9d002768 <_general_exception_handler+0x24>
9d00275c:	3c029d00 	lui	v0,0x9d00
9d002760:	7000003f 	sdbbp
9d002764:	3c029d00 	lui	v0,0x9d00
9d002768:	244227d4 	addiu	v0,v0,10196
9d00276c:	10400005 	beqz	v0,9d002784 <_general_exception_handler+0x40>
9d002770:	00000000 	nop
9d002774:	27bdffe8 	addiu	sp,sp,-24
9d002778:	afbf0014 	sw	ra,20(sp)
9d00277c:	0040f809 	jalr	v0
9d002780:	00000000 	nop
9d002784:	0b4009e1 	j	9d002784 <_general_exception_handler+0x40>
9d002788:	00000000 	nop

Disassembly of section .vector_default:

9d00278c <_DefaultInterrupt>:
9d00278c:	3c020000 	lui	v0,0x0
9d002790:	24420000 	addiu	v0,v0,0
9d002794:	10400007 	beqz	v0,9d0027b4 <_DefaultInterrupt+0x28>
9d002798:	3c020000 	lui	v0,0x0
9d00279c:	24420000 	addiu	v0,v0,0
9d0027a0:	50400005 	beqzl	v0,9d0027b8 <_DefaultInterrupt+0x2c>
9d0027a4:	3c029d00 	lui	v0,0x9d00
9d0027a8:	7000003f 	sdbbp
9d0027ac:	03e00008 	jr	ra
9d0027b0:	00000000 	nop
9d0027b4:	3c029d00 	lui	v0,0x9d00
9d0027b8:	244227d4 	addiu	v0,v0,10196
9d0027bc:	10400003 	beqz	v0,9d0027cc <_DefaultInterrupt+0x40>
9d0027c0:	00000000 	nop
9d0027c4:	0040f809 	jalr	v0
9d0027c8:	00000000 	nop
9d0027cc:	03e00008 	jr	ra
9d0027d0:	00000000 	nop

Disassembly of section .text:

9d0027d4 <__pic32_software_reset>:
9d0027d4:	41606000 	di
9d0027d8:	000000c0 	ehb
9d0027dc:	3c03aa99 	lui	v1,0xaa99
9d0027e0:	3c02bf81 	lui	v0,0xbf81
9d0027e4:	24636655 	addiu	v1,v1,26197
9d0027e8:	ac40f230 	sw	zero,-3536(v0)
9d0027ec:	ac43f230 	sw	v1,-3536(v0)
9d0027f0:	3c035566 	lui	v1,0x5566
9d0027f4:	346399aa 	ori	v1,v1,0x99aa
9d0027f8:	ac43f230 	sw	v1,-3536(v0)
9d0027fc:	3c02bf81 	lui	v0,0xbf81
9d002800:	24030001 	li	v1,1
9d002804:	ac43f618 	sw	v1,-2536(v0)
9d002808:	3c02bf81 	lui	v0,0xbf81
9d00280c:	8c42f610 	lw	v0,-2544(v0)
9d002810:	0b4009f7 	j	9d0027dc <__pic32_software_reset+0x8>
9d002814:	00000000 	nop

9d002818 <_nmi_handler>:
9d002818:	401a6000 	mfc0	k0,c0_status
9d00281c:	3c1bffbf 	lui	k1,0xffbf
9d002820:	377bffff 	ori	k1,k1,0xffff
9d002824:	035bd024 	and	k0,k0,k1
9d002828:	409a6000 	mtc0	k0,c0_status
9d00282c:	42000018 	eret

Disassembly of section .dinit:

9d002830 <.dinit>:
9d002830:	a0000000 	sb	zero,0(zero)
9d002834:	00000010 	mfhi	zero
	...

Disassembly of section .text._on_reset:

9d002840 <_on_reset>:
9d002840:	03e00008 	jr	ra
9d002844:	00000000 	nop

Disassembly of section .text._on_bootstrap:

9d002848 <_on_bootstrap>:
9d002848:	03e00008 	jr	ra
9d00284c:	00000000 	nop
